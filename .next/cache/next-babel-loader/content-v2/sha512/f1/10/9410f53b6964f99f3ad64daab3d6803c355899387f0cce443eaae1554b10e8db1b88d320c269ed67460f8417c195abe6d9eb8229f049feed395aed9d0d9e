{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/gyantek/Desktop/Nextjs_project/nextjs_project/pages/[meetupId]/index.js\";\nimport { MongoClient } from \"mongodb\";\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\n\nconst MeetupDetails = props => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(MeetupDetail, {\n      image: props.meetupData.image,\n      title: props.meetupData.title,\n      address: props.meetupData.address,\n      description: props.meetupData.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n\nexport async function getStaticPaths() {\n  const client = await MongoClient.connect('mongodb+srv://Sandeep:Gyantek2021@cluster0.2r23m.mongodb.net/meetups?retryWrites=true&w=majority');\n  const db = client.db();\n  const meetupCollection = db.collection('meetups');\n  const meetups = await meetupCollection.find({}, {\n    _id: 1\n  }).toArray();\n  return {\n    fallback: false,\n    paths: meetups.map(meetup => ({\n      params: {\n        meetupId: meetup._id.toString()\n      }\n    }))\n  };\n}\nexport async function getStaticProps(context) {\n  const meetupId = context.params.meetupId;\n  const client = await MongoClient.connect('mongodb+srv://Sandeep:Gyantek2021@cluster0.2r23m.mongodb.net/meetups?retryWrites=true&w=majority');\n  const db = client.db();\n  const meetupCollection = db.collection('meetups');\n  const selectedMeetup = await meetupCollection.findOne({\n    _id: meetupId\n  });\n  client.close();\n  return {\n    props: {\n      meetupData: selectedMeetup\n    }\n  };\n}\nexport default MeetupDetails;","map":{"version":3,"sources":["/Users/gyantek/Desktop/Nextjs_project/nextjs_project/pages/[meetupId]/index.js"],"names":["MongoClient","MeetupDetail","MeetupDetails","props","meetupData","image","title","address","description","getStaticPaths","client","connect","db","meetupCollection","collection","meetups","find","_id","toArray","fallback","paths","map","meetup","params","meetupId","toString","getStaticProps","context","selectedMeetup","findOne","close"],"mappings":";;;AAAA,SAASA,WAAT,QAA4B,SAA5B;AACA,OAAOC,YAAP,MAAyB,uCAAzB;;AACA,MAAMC,aAAa,GAAIC,KAAD,IAAW;AAC7B,sBACI;AAAA,2BACA,QAAC,YAAD;AACI,MAAA,KAAK,EAAEA,KAAK,CAACC,UAAN,CAAiBC,KAD5B;AAEI,MAAA,KAAK,EAAEF,KAAK,CAACC,UAAN,CAAiBE,KAF5B;AAGI,MAAA,OAAO,EAAEH,KAAK,CAACC,UAAN,CAAiBG,OAH9B;AAII,MAAA,WAAW,EAAEJ,KAAK,CAACC,UAAN,CAAiBI;AAJlC;AAAA;AAAA;AAAA;AAAA;AADA,mBADJ;AAUH,CAXD;;AAaA,OAAO,eAAeC,cAAf,GAAgC;AAEnC,QAAMC,MAAM,GAAG,MAAMV,WAAW,CAACW,OAAZ,CAAoB,kGAApB,CAArB;AACA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AACA,QAAMC,gBAAgB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAAzB;AAEA,QAAMC,OAAO,GAAG,MAAMF,gBAAgB,CAACG,IAAjB,CAAsB,EAAtB,EAA0B;AAAEC,IAAAA,GAAG,EAAC;AAAN,GAA1B,EAAqCC,OAArC,EAAtB;AAGA,SAAM;AACFC,IAAAA,QAAQ,EAAE,KADR;AAEFC,IAAAA,KAAK,EAAEL,OAAO,CAACM,GAAR,CAAYC,MAAM,KAAK;AAAEC,MAAAA,MAAM,EAAE;AAAEC,QAAAA,QAAQ,EAAGF,MAAM,CAACL,GAAP,CAAWQ,QAAX;AAAb;AAAV,KAAL,CAAlB;AAFL,GAAN;AAKH;AAGD,OAAO,eAAeC,cAAf,CAA8BC,OAA9B,EAAuC;AAC1C,QAAMH,QAAQ,GAAGG,OAAO,CAACJ,MAAR,CAAeC,QAAhC;AAEA,QAAMd,MAAM,GAAG,MAAMV,WAAW,CAACW,OAAZ,CAAoB,kGAApB,CAArB;AACA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AACA,QAAMC,gBAAgB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAAzB;AAEA,QAAMc,cAAc,GAAG,MAAMf,gBAAgB,CAACgB,OAAjB,CAAyB;AAAEZ,IAAAA,GAAG,EAAEO;AAAP,GAAzB,CAA7B;AAEAd,EAAAA,MAAM,CAACoB,KAAP;AAEJ,SAAM;AACF3B,IAAAA,KAAK,EAAE;AACHC,MAAAA,UAAU,EAAGwB;AADV;AADL,GAAN;AAKC;AAED,eAAe1B,aAAf","sourcesContent":["import { MongoClient } from \"mongodb\";\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\nconst MeetupDetails = (props) => {\n    return (\n        <>\n        <MeetupDetail \n            image={props.meetupData.image}\n            title={props.meetupData.title}\n            address={props.meetupData.address}\n            description={props.meetupData.description}\n        />\n        </>\n    )\n}\n\nexport async function getStaticPaths() {\n\n    const client = await MongoClient.connect('mongodb+srv://Sandeep:Gyantek2021@cluster0.2r23m.mongodb.net/meetups?retryWrites=true&w=majority');\n    const db = client.db();\n    const meetupCollection = db.collection('meetups');\n\n    const meetups = await meetupCollection.find({}, { _id:1 }).toArray();\n\n\n    return{\n        fallback: false,    \n        paths: meetups.map(meetup => ({ params: { meetupId : meetup._id.toString() } }))\n        \n    }\n}\n\n\nexport async function getStaticProps(context) {\n    const meetupId = context.params.meetupId;\n\n    const client = await MongoClient.connect('mongodb+srv://Sandeep:Gyantek2021@cluster0.2r23m.mongodb.net/meetups?retryWrites=true&w=majority');\n    const db = client.db();\n    const meetupCollection = db.collection('meetups');\n\n    const selectedMeetup = await meetupCollection.findOne({ _id: meetupId });\n   \n    client.close(); \n\nreturn{\n    props: {\n        meetupData : selectedMeetup,\n    }\n}\n}   \n\nexport default MeetupDetails;"]},"metadata":{},"sourceType":"module"}