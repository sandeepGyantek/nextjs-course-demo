{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/gyantek/Desktop/Nextjs_project/nextjs_project/pages/[meetupId]/index.js\";\nimport { MongoClient } from \"mongodb\";\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\n\nconst MeetupDetails = () => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(MeetupDetail, {\n      image: \"https://picsum.photos/seed/picsum/200/300\",\n      title: \"Fisrt Meetup\",\n      address: \"some street 23, some city\",\n      description: \"this is first meetup\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n\nexport async function getStaticPaths() {\n  const client = await MongoClient.connect('mongodb+srv://Sandeep:Gyantek2021@cluster0.2r23m.mongodb.net/meetups?retryWrites=true&w=majority');\n  const db = client.db();\n  const meetupCollection = db.collection('meetups');\n  const meetups = await meetupCollection.find({}, {\n    _id: 1\n  }).toArray();\n  return {\n    fallback: false,\n    paths: meetups.map(meetup => ({\n      params: {\n        meetupId: meetup._id.toString()\n      }\n    }))\n  };\n}\nexport async function getStaticProps(context) {\n  const meetupId = context.params.meetupId;\n  return {\n    props: {\n      meetupData: {\n        image: 'https://picsum.photos/seed/picsum/200/300',\n        id: meetupId,\n        title: 'Fisrt Meetup',\n        address: 'some street 23, some city',\n        description: 'this is first meetup'\n      }\n    }\n  };\n}\nexport default MeetupDetails;","map":{"version":3,"sources":["/Users/gyantek/Desktop/Nextjs_project/nextjs_project/pages/[meetupId]/index.js"],"names":["MongoClient","MeetupDetail","MeetupDetails","getStaticPaths","client","connect","db","meetupCollection","collection","meetups","find","_id","toArray","fallback","paths","map","meetup","params","meetupId","toString","getStaticProps","context","props","meetupData","image","id","title","address","description"],"mappings":";;;AAAA,SAASA,WAAT,QAA4B,SAA5B;AACA,OAAOC,YAAP,MAAyB,uCAAzB;;AACA,MAAMC,aAAa,GAAG,MAAM;AACxB,sBACI;AAAA,2BACA,QAAC,YAAD;AACI,MAAA,KAAK,EAAC,2CADV;AAEI,MAAA,KAAK,EAAC,cAFV;AAGI,MAAA,OAAO,EAAC,2BAHZ;AAII,MAAA,WAAW,EAAC;AAJhB;AAAA;AAAA;AAAA;AAAA;AADA,mBADJ;AAUH,CAXD;;AAaA,OAAO,eAAeC,cAAf,GAAgC;AAEnC,QAAMC,MAAM,GAAG,MAAMJ,WAAW,CAACK,OAAZ,CAAoB,kGAApB,CAArB;AACA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AACA,QAAMC,gBAAgB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAAzB;AAEA,QAAMC,OAAO,GAAG,MAAMF,gBAAgB,CAACG,IAAjB,CAAsB,EAAtB,EAA0B;AAAEC,IAAAA,GAAG,EAAC;AAAN,GAA1B,EAAqCC,OAArC,EAAtB;AAGA,SAAM;AACFC,IAAAA,QAAQ,EAAE,KADR;AAEFC,IAAAA,KAAK,EAAEL,OAAO,CAACM,GAAR,CAAYC,MAAM,KAAK;AAAEC,MAAAA,MAAM,EAAE;AAAEC,QAAAA,QAAQ,EAAGF,MAAM,CAACL,GAAP,CAAWQ,QAAX;AAAb;AAAV,KAAL,CAAlB;AAFL,GAAN;AAKH;AAGD,OAAO,eAAeC,cAAf,CAA8BC,OAA9B,EAAuC;AAC1C,QAAMH,QAAQ,GAAGG,OAAO,CAACJ,MAAR,CAAeC,QAAhC;AAGJ,SAAM;AACFI,IAAAA,KAAK,EAAE;AACHC,MAAAA,UAAU,EAAG;AACTC,QAAAA,KAAK,EAAE,2CADE;AAETC,QAAAA,EAAE,EAAEP,QAFK;AAGTQ,QAAAA,KAAK,EAAE,cAHE;AAITC,QAAAA,OAAO,EAAE,2BAJA;AAKTC,QAAAA,WAAW,EAAE;AALJ;AADV;AADL,GAAN;AAWC;AAED,eAAe1B,aAAf","sourcesContent":["import { MongoClient } from \"mongodb\";\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\nconst MeetupDetails = () => {\n    return (\n        <>\n        <MeetupDetail \n            image='https://picsum.photos/seed/picsum/200/300'\n            title='Fisrt Meetup'\n            address='some street 23, some city'\n            description='this is first meetup'\n        />\n        </>\n    )\n}\n\nexport async function getStaticPaths() {\n\n    const client = await MongoClient.connect('mongodb+srv://Sandeep:Gyantek2021@cluster0.2r23m.mongodb.net/meetups?retryWrites=true&w=majority');\n    const db = client.db();\n    const meetupCollection = db.collection('meetups');\n\n    const meetups = await meetupCollection.find({}, { _id:1 }).toArray();\n\n\n    return{\n        fallback: false,    \n        paths: meetups.map(meetup => ({ params: { meetupId : meetup._id.toString() } }))\n        \n    }\n}\n\n\nexport async function getStaticProps(context) {\n    const meetupId = context.params.meetupId;\n   \n\nreturn{\n    props: {\n        meetupData : {\n            image: 'https://picsum.photos/seed/picsum/200/300',\n            id: meetupId,\n            title: 'Fisrt Meetup',\n            address: 'some street 23, some city',\n            description: 'this is first meetup',\n        }\n    }\n}\n}   \n\nexport default MeetupDetails;"]},"metadata":{},"sourceType":"module"}